#!/bin/bash

export PATH=/usr/local/cuda-11.0/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-11.0/lib64:$LD_LBRARY_PATH
source load_intel

ulimit -s unlimited

experiment_sizes="10 20 30 40"

## List of all CU configurations
declare -a cu_list=("#define CUS 1" "#define CUS 1, 2" "#define CUS 1, 2, 3" "#define CUS 1, 2, 3, 4" "#define CUS 1, 2, 3, 4, 5" "#define CUS 1, 2, 3, 4, 5, 6" "#define CUS 1, 2, 3, 4, 5, 6, 7" "#define CUS 1, 2, 3, 4, 5, 6, 7, 8" "#define CUS 1, 2, 3, 4, 5, 6, 7, 8, 9" "#define CUS 1, 2, 3, 4, 5, 6, 7, 8, 9, 10" "#define CUS 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11")
#declare -a cu_list=("#define CUS 1, 2, 3, 4, 5, 6")
declare -a files_to_exec=("matMulj_k_i.scm" "matMulj_k_iGPU.scm")
#declare -a files_to_exec=("matMulj_k_i.scm")


execMode="OOO_MKL"
base_project_dir=/home/josem/SCMUlate/SCM/SCMUlate
threadConfigFile=${base_project_dir}/include/common/threads_configuration.hpp
build_folder=${base_project_dir}/buildIntel_opt
#build_folder=${base_project_dir}/buildIntel_opt_nomkl
results_file=${build_folder}/"res_ooo_per_operand_mkl.txt"
time_results_file=${build_folder}/"res_ooo_mkl.txt"
program_folder=${build_folder}/apps/matrixMultX
executable=MatMulX
python_script=${base_project_dir}/tools/traceplot.py


for val in "${cu_list[@]}"; do
    echo $val
    num_cus=${val##* }
    #Change last line
    sed -i '$s/.*//g' $threadConfigFile
    echo $val >> $threadConfigFile
    cd $build_folder
    make -j > /dev/null
    cd $program_folder
    #Iterate over codes
    for file_scm in "${files_to_exec[@]}"; do
        echo $file_scm
        # # repeat experiments 5 times
        # for reps in `seq 1 5`; do
        #     for i in ${experiment_sizes}; do 
        #         exec_time=`./${executable} -M $i -N $i -K $i -i $file_scm | grep "Exec Time" | grep -oh "[0-9.]*"`
        #         echo $reps " - " $i " - " $exec_time
        #         printf "%s\t%s\t%s\t%s\t%s\n" $execMode $file_scm $num_cus $i $exec_time >> $time_results_file
        #     done;
        # done;
        for i in ${experiment_sizes}; do 
            exec_time=`./${executable} -M $i -N $i -K $i -i $file_scm | grep "Exec Time" | grep -oh "[0-9.]*"`
            echo $reps " - " $i " - " $exec_time
            python $python_script -i trace.json -so > .tmp.txt
            tail -n +2 .tmp.txt > .tmp2.txt
            rm .tmp.txt
            sed -ie "s/^/$execMode\t$file_scm\t$num_cus\t${i}\t/" .tmp2.txt
            cat .tmp2.txt >> $results_file
            rm .tmp2.txt
        done;
    done;
done;

execMode="OOO_NOBLAS"
build_folder=${base_project_dir}/buildIntel_opt_nomkl
results_file=${build_folder}/"res_ooo_per_operand.txt"
time_results_file=${build_folder}/"res_ooo_noblas.txt"
program_folder=${build_folder}/apps/matrixMultX
executable=MatMulX
python_script=${base_project_dir}/tools/traceplot.py

for val in "${cu_list[@]}"; do
    echo $val
    num_cus=${val##* }
    #Change last line
    sed -i '$s/.*//g' $threadConfigFile
    echo $val >> $threadConfigFile
    cd $build_folder
    make -j > /dev/null
    cd $program_folder
    #Iterate over codes
    for file_scm in "${files_to_exec[@]}"; do
        echo $file_scm
        # repeat experiments 5 times
        # for reps in `seq 1 5`; do
        #     for i in ${experiment_sizes}; do 
        #         exec_time=`./${executable} -M $i -N $i -K $i -i $file_scm | grep "Exec Time" | grep -oh "[0-9.]*"`
        #         echo $reps " - " $i " - " $exec_time
        #         printf "%s\t%s\t%s\t%s\t%s\n" $execMode $file_scm $num_cus $i $exec_time >> $time_results_file
        #     done;
        # done;
        for i in ${experiment_sizes}; do 
            exec_time=`./${executable} -M $i -N $i -K $i -i $file_scm | grep "Exec Time" | grep -oh "[0-9.]*"`
            echo $reps " - " $i " - " $exec_time
            python $python_script -i trace.json -so > .tmp.txt
            tail -n +2 .tmp.txt > .tmp2.txt
            rm .tmp.txt
            sed -ie "s/^/$execMode\t$file_scm\t$num_cus\t${i}\t/" .tmp2.txt
            cat .tmp2.txt >> $results_file
            rm .tmp2.txt
        done;
    done;
done;

# execMode="MM_MKL"
# build_folder=${base_project_dir}/buildIntel_opt
# results_file=${build_folder}/"res.txt"
# time_results_file=${build_folder}/"res_mm_mkl.txt"
# program_folder=${build_folder}/apps/basecodes
# executable=MatMulMKLBaseline

# cd $program_folder
# for threads in `seq 1 11`; do
#     for res in `seq 1 5`; do 
#         for i in ${experiment_sizes}; do 
#             exec_time=`./${executable} -M $i -N $i -K $i -p $threads | grep "Time" | grep -oh "[0-9.]*"`
#             echo $res " - " $i " - " $exec_time
#             printf "%s\t%s\t%s\t%s\n" $execMode $threads $i $exec_time >> $time_results_file;
#         done;
#     done;
# done;

# execMode="MM_OMP"
# build_folder=${base_project_dir}/buildIntel_opt_nomkl
# results_file=${build_folder}/"res.txt"
# time_results_file=${build_folder}/"res_mm_omp.txt"
# program_folder=${build_folder}/apps/basecodes
# executable=MatMulOpenMPBaseline

# cd $program_folder

# for threads in `seq 1 11`; do 
#     for res in `seq 1 5`; do 
#         for i in ${experiment_sizes}; do 
#             exec_time=`./${executable} -M $i -N $i -K $i -p $threads | grep "Time" | grep -oh "[0-9.]*"`
#             echo $res " - " $i " - " $exec_time
#             printf "%s\t%s\t%s\t%s\n" $execMode $threads $i $exec_time >> $time_results_file;
#         done;
#     done;
# done;
